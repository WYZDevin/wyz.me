---
import { ArrowOutward } from '@icons/ArrowOutward'
import { ArrowRight } from '@icons/ArrowRight'
import type { MarkdownHeading } from 'astro'
import type { InferEntrySchema } from 'astro:content'

import Image from '@/components/Image'
import Link, { LinkArticle } from '@/components/Link'
import SEO from '@/components/SEO.astro'
import TableOfContent from '@/components/TableOfContent'
import TopOverlay from '@/components/TopOverlay.astro'
import ScrollProgressBar from '@/components/ui/scroll-progress-bar'
import { BASE_URL } from '@/lib/baseUrl'
import { formatDateByTimeZone } from '@/lib/utils'

import BaseLayout from '../BaseLayout.astro'
import Links from '../components/Links.astro'

// 1. Export the Props interface:
export interface Props {
  year: string
  description: string
  heroImage: string
  heroImageAlign: string
  title: string
  htmlTitle: string
  headings: MarkdownHeading[]
  slug: string
  updatedDate: string
  latestCommitUrl: string
  links: InferEntrySchema<'projects'>['links']
}

// 2. Cast Astro.props to Props:
const {
  year,
  description,
  heroImage,
  heroImageAlign,
  title,
  htmlTitle: _htmlTitle,
  headings,
  slug,
  updatedDate,
  latestCommitUrl,
  links
} = Astro.props as Props

const htmlTitle = _htmlTitle
  ? _htmlTitle.replace(
      '\\n',
      "<br class='max-md:hidden' /><span class='md:hidden'>&nbsp;</span>"
    )
  : title
---

<BaseLayout class='!max-w-[1024px]'>
  <SEO
    title={title}
    description={description}
    imageUrl={`${BASE_URL}/api/og/${slug}`}
    type='article'
    slot='seo'
  />
  <slot name='head' slot='head' />
  <TopOverlay />
  <ScrollProgressBar
    className='bg-[var(--projectAccentColor)]'
    targetId='article'
    client:only='react'
  />

  <section class='mt-16 sm:mt-24 sm:font-light lg:mt-32'>
    <h2 class='text-zinc-400 sm:text-lg'>{year}</h2>
    <h1
      class='font-heading mt-4 text-[clamp(1.8rem,5vw,2.5rem)] font-bold leading-[1.25] sm:mt-6 md:leading-[1.1]'
      set:html={htmlTitle}
    />
    <h3 class='mt-4 text-zinc-400 max-sm:text-sm'>{description}</h3>
    {links && links.length > 0 && (
      <div class='mt-4 flex gap-4 max-sm:flex-col-reverse sm:mt-6 sm:items-center sm:justify-between'>
        <Links links={links} />
      </div>
    )}
  </section>

  <!-- <Image
    src={heroImage}
    alt={title}
    title={title}
    align={heroImageAlign as 'top' | 'center' | undefined}
    wrapperProps={{ class: 'rounded-lg mt-8 sm:mt-12' }}
    class='aspect-[1.5] w-full xs:aspect-[2]'
    ambientMode
  />

  <section class='mt-8 flex w-full gap-16 sm:mt-16'>
    <article
      id='article'
      class:list={[
        'prose prose-invert max-w-none max-sm:prose-sm',
        'prose-headings:font-display prose-headings:scroll-m-16 sm:prose-headings:scroll-m-24',
        'prose-a:article-link prose-a:text-[var(--projectAccentColor)]'
      ]}
    >
      <slot />
      {updatedDate && (
        <p class='!mt-8 text-zinc-500'>
          Last updated on {formatDateByTimeZone(updatedDate)} UTC+7.
          {latestCommitUrl && (
            <LinkArticle href={latestCommitUrl}>
              See Changelog
              <ArrowOutward className='inline-block size-3 ml-1' />
            </LinkArticle>
          )}
        </p>
      )}
    </article>

    <aside class='w-60 shrink-0 space-y-8 max-lg:hidden'>
      {/* 4. Use class= on an Astro component */}
      <TableOfContent headings={headings} class='sticky top-32' />
    </aside>
  </section> -->

  <section class='mt-16'>
    <Link
      href='/academic/publications'
      class='!text-zinc-200 !no-underline'
      styled
      hoverStyled
      hoverEffectOffsetStart='24px'
    >
      <ArrowRight className='mr-2 inline-block size-4 -scale-x-100' />
      Explore more publications
    </Link>
  </section>
</BaseLayout>

<style is:global define:vars={{ projectAccentColor: '#2dd4bf' }}>
  /* 5. Use quoted keys in theme() */
  * {
    --projectAccentColor: theme('colors.zinc.200');
  }

  .article-heading > a {
    font-weight: 600;
    text-decoration: none;
    text-underline-offset: 0px;
    transition: all 150ms ease-in-out;
  }

  @media (max-width: 480px) {
    .article-heading > a {
      font-weight: 700;
    }
  }

  .article-heading > a:hover {
    text-decoration: underline !important;
    text-underline-offset: 2px !important;
  }

  .article-heading > a::after {
    /* …unchanged… */
  }

  /* …the rest of your CSS… */
</style>

<script>
  const handleHeadingIntersection = () => {
    /* …unchanged… */
  }

  document.addEventListener('astro:page-load', handleHeadingIntersection)
</script>
