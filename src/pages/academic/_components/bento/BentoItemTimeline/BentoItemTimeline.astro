---
import { timelineData } from './timeline'
import BentoBadge from '../BentoBadge'
import { Timer } from '@/components/icons/Timer'

interface Props {
  class?: string
}

const { class: className } = Astro.props

// Sort timeline data by year automatically
const sortedTimelineData = [...timelineData].sort((a, b) => parseInt(a.year) - parseInt(b.year))

// Calculate dynamic spacing for auto-fit
const itemCount = sortedTimelineData.length
const itemWidth = 192 // w-48 = 192px
const containerPadding = 48 // p-6 = 24px each side
const minGap = 16 // minimum gap between items
---

<div class:list={['relative size-full overflow-hidden', className]}>
  <BentoBadge
    className={{ component: 'absolute left-4 top-4 z-10' }}
    icon={Timer}
  />
  
  <div class='flex h-full items-center p-6 pt-16'>
    <div class='w-full overflow-hidden timeline-wrapper'>
      <div 
        class='timeline-container relative flex pb-4 scrollbar-hide'
        style={`--item-count: ${itemCount}; --item-width: ${itemWidth}px; --container-padding: ${containerPadding}px; --min-gap: ${minGap}px;`}
      >
        <!-- Continuous timeline line -->
        <div class='timeline-continuous-line absolute top-6 h-px bg-gradient-to-r from-emerald-400/60 via-emerald-400/40 to-emerald-400/60'></div>
        
        {sortedTimelineData.map((item, index) => (
          <div 
            class='timeline-item w-48'
            style={`animation-delay: ${index * 150}ms`}
          >
            <div class='relative'>
              <!-- Timeline dot -->
              <div class='timeline-dot theme-timeline-dot relative z-10 mx-auto mb-4 flex h-12 w-12 items-center justify-center rounded-full'>
                <item.icon className='h-6 w-6 text-theme-inverse' />
              </div>
              
              <!-- Content -->
              <div class='timeline-content text-center'>
                <div class='timeline-year theme-year-badge mb-3 mx-auto w-fit px-3 py-1.5 rounded-lg'>
                  <span class='text-lg font-bold accent-primary drop-shadow-sm'>
                    {item.year}
                  </span>
                </div>
                <h3 class='mb-2 text-sm font-semibold text-theme-primary leading-tight'>
                  {item.title}
                </h3>
                <p class='text-xs text-theme-secondary leading-relaxed' set:html={item.description} />
                
                <!-- Type badge -->
                {/* <div class={`mt-3 inline-block rounded-full px-2 py-1 text-xs font-medium ${
                  item.type === 'education' ? 'bg-blue-500/20 text-blue-300' :
                  item.type === 'work' ? 'bg-success-100 text-success-600' :
                  item.type === 'achievement' ? 'bg-yellow-500/20 text-yellow-300' :
                  'bg-purple-500/20 text-purple-300'
                }`}>
                  {item.type}
                </div> */}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</div>

<style>
  .timeline-wrapper {
    container-type: inline-size;
  }
  
  .timeline-container {
    scrollbar-width: none;
    -ms-overflow-style: none;
    
    /* Dynamic spacing calculation */
    --available-width: 100%;
    --total-item-width: calc(var(--item-count) * var(--item-width));
    --gap-count: calc(var(--item-count) - 1);
    --calculated-gap: max(var(--min-gap), calc((100cqw - var(--container-padding) - var(--total-item-width)) / var(--gap-count)));
    
    gap: var(--calculated-gap);
    
    /* If items don't fit, enable horizontal scroll */
    overflow-x: auto;
  }
  
  .timeline-container::-webkit-scrollbar {
    display: none;
  }
  
  .timeline-item {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease-out forwards;
  }
  
  .timeline-dot {
    position: relative;
    transition: all 0.3s ease;
  }
  
  .timeline-dot:hover {
    transform: scale(1.1);
    box-shadow: 0 0 20px rgba(16, 185, 129, 0.4);
  }
  
  .timeline-continuous-line {
    height: 3px;
    background: var(--timeline-line);
    box-shadow: var(--shadow-sm);
    border-radius: 2px;
    
    /* Dynamic line width calculation */
    left: calc(var(--item-width) / 2);
    right: calc(var(--item-width) / 2);
    width: calc(100% - var(--item-width));
  }
  
  .timeline-year {
    transition: all 0.3s ease;
  }
  
  .timeline-year:hover {
    transform: scale(1.05);
    background: var(--primary-100);
    border-color: var(--primary-300);
    box-shadow: var(--shadow-md);
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .timeline-container {
      --item-width: 180px;
      --min-gap: 12px;
    }
  }
  
  @media (max-width: 640px) {
    .timeline-container {
      --item-width: 160px;
      --min-gap: 8px;
    }
    
    .timeline-item {
      width: 160px;
    }
  }
  
  /* Fallback for browsers that don't support container queries */
  @supports not (width: 100cqw) {
    .timeline-container {
      --calculated-gap: var(--min-gap);
      overflow-x: auto;
    }
  }
</style> 